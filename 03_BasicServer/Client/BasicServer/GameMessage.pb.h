// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#ifndef PROTOBUF_GameMessage_2eproto__INCLUDED
#define PROTOBUF_GameMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_GameMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPLoginRequestImpl();
void InitDefaultsPLoginRequest();
void InitDefaultsPLoginRespondImpl();
void InitDefaultsPLoginRespond();
void InitDefaultsPActionRequestImpl();
void InitDefaultsPActionRequest();
void InitDefaultsPPlayerActionImpl();
void InitDefaultsPPlayerAction();
void InitDefaultsPMoveRequestImpl();
void InitDefaultsPMoveRequest();
void InitDefaultsPPlayerMoveImpl();
void InitDefaultsPPlayerMove();
void InitDefaultsPTurnRequestImpl();
void InitDefaultsPTurnRequest();
void InitDefaultsPPlayerTurnImpl();
void InitDefaultsPPlayerTurn();
void InitDefaultsPGameBeginImpl();
void InitDefaultsPGameBegin();
inline void InitDefaults() {
  InitDefaultsPLoginRequest();
  InitDefaultsPLoginRespond();
  InitDefaultsPActionRequest();
  InitDefaultsPPlayerAction();
  InitDefaultsPMoveRequest();
  InitDefaultsPPlayerMove();
  InitDefaultsPTurnRequest();
  InitDefaultsPPlayerTurn();
  InitDefaultsPGameBegin();
}
}  // namespace protobuf_GameMessage_2eproto
class PActionRequest;
class PActionRequestDefaultTypeInternal;
extern PActionRequestDefaultTypeInternal _PActionRequest_default_instance_;
class PGameBegin;
class PGameBeginDefaultTypeInternal;
extern PGameBeginDefaultTypeInternal _PGameBegin_default_instance_;
class PLoginRequest;
class PLoginRequestDefaultTypeInternal;
extern PLoginRequestDefaultTypeInternal _PLoginRequest_default_instance_;
class PLoginRespond;
class PLoginRespondDefaultTypeInternal;
extern PLoginRespondDefaultTypeInternal _PLoginRespond_default_instance_;
class PMoveRequest;
class PMoveRequestDefaultTypeInternal;
extern PMoveRequestDefaultTypeInternal _PMoveRequest_default_instance_;
class PPlayerAction;
class PPlayerActionDefaultTypeInternal;
extern PPlayerActionDefaultTypeInternal _PPlayerAction_default_instance_;
class PPlayerMove;
class PPlayerMoveDefaultTypeInternal;
extern PPlayerMoveDefaultTypeInternal _PPlayerMove_default_instance_;
class PPlayerTurn;
class PPlayerTurnDefaultTypeInternal;
extern PPlayerTurnDefaultTypeInternal _PPlayerTurn_default_instance_;
class PTurnRequest;
class PTurnRequestDefaultTypeInternal;
extern PTurnRequestDefaultTypeInternal _PTurnRequest_default_instance_;

// ===================================================================

class PLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PLoginRequest) */ {
 public:
  PLoginRequest();
  virtual ~PLoginRequest();

  PLoginRequest(const PLoginRequest& from);

  inline PLoginRequest& operator=(const PLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PLoginRequest(PLoginRequest&& from) noexcept
    : PLoginRequest() {
    *this = ::std::move(from);
  }

  inline PLoginRequest& operator=(PLoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PLoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PLoginRequest* internal_default_instance() {
    return reinterpret_cast<const PLoginRequest*>(
               &_PLoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PLoginRequest* other);
  friend void swap(PLoginRequest& a, PLoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PLoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PLoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PLoginRequest& from);
  void MergeFrom(const PLoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserName = 1;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:PLoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRequestImpl();
};
// -------------------------------------------------------------------

class PLoginRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PLoginRespond) */ {
 public:
  PLoginRespond();
  virtual ~PLoginRespond();

  PLoginRespond(const PLoginRespond& from);

  inline PLoginRespond& operator=(const PLoginRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PLoginRespond(PLoginRespond&& from) noexcept
    : PLoginRespond() {
    *this = ::std::move(from);
  }

  inline PLoginRespond& operator=(PLoginRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PLoginRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PLoginRespond* internal_default_instance() {
    return reinterpret_cast<const PLoginRespond*>(
               &_PLoginRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PLoginRespond* other);
  friend void swap(PLoginRespond& a, PLoginRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PLoginRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PLoginRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PLoginRespond& from);
  void MergeFrom(const PLoginRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PLoginRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 AllowLogin = 1;
  void clear_allowlogin();
  static const int kAllowLoginFieldNumber = 1;
  ::google::protobuf::uint32 allowlogin() const;
  void set_allowlogin(::google::protobuf::uint32 value);

  // uint32 PlayerNumber = 2;
  void clear_playernumber();
  static const int kPlayerNumberFieldNumber = 2;
  ::google::protobuf::uint32 playernumber() const;
  void set_playernumber(::google::protobuf::uint32 value);

  // uint32 SelfID = 3;
  void clear_selfid();
  static const int kSelfIDFieldNumber = 3;
  ::google::protobuf::uint32 selfid() const;
  void set_selfid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PLoginRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 allowlogin_;
  ::google::protobuf::uint32 playernumber_;
  ::google::protobuf::uint32 selfid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRespondImpl();
};
// -------------------------------------------------------------------

class PActionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PActionRequest) */ {
 public:
  PActionRequest();
  virtual ~PActionRequest();

  PActionRequest(const PActionRequest& from);

  inline PActionRequest& operator=(const PActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PActionRequest(PActionRequest&& from) noexcept
    : PActionRequest() {
    *this = ::std::move(from);
  }

  inline PActionRequest& operator=(PActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PActionRequest* internal_default_instance() {
    return reinterpret_cast<const PActionRequest*>(
               &_PActionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PActionRequest* other);
  friend void swap(PActionRequest& a, PActionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PActionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PActionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PActionRequest& from);
  void MergeFrom(const PActionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PActionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ActionType = 1;
  void clear_actiontype();
  static const int kActionTypeFieldNumber = 1;
  ::google::protobuf::uint32 actiontype() const;
  void set_actiontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PActionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 actiontype_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPActionRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerAction) */ {
 public:
  PPlayerAction();
  virtual ~PPlayerAction();

  PPlayerAction(const PPlayerAction& from);

  inline PPlayerAction& operator=(const PPlayerAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerAction(PPlayerAction&& from) noexcept
    : PPlayerAction() {
    *this = ::std::move(from);
  }

  inline PPlayerAction& operator=(PPlayerAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerAction* internal_default_instance() {
    return reinterpret_cast<const PPlayerAction*>(
               &_PPlayerAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PPlayerAction* other);
  friend void swap(PPlayerAction& a, PPlayerAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerAction* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerAction& from);
  void MergeFrom(const PPlayerAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // uint32 ActionType = 2;
  void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  ::google::protobuf::uint32 actiontype() const;
  void set_actiontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PPlayerAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 actiontype_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionImpl();
};
// -------------------------------------------------------------------

class PMoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PMoveRequest) */ {
 public:
  PMoveRequest();
  virtual ~PMoveRequest();

  PMoveRequest(const PMoveRequest& from);

  inline PMoveRequest& operator=(const PMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PMoveRequest(PMoveRequest&& from) noexcept
    : PMoveRequest() {
    *this = ::std::move(from);
  }

  inline PMoveRequest& operator=(PMoveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PMoveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PMoveRequest* internal_default_instance() {
    return reinterpret_cast<const PMoveRequest*>(
               &_PMoveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PMoveRequest* other);
  friend void swap(PMoveRequest& a, PMoveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PMoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PMoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PMoveRequest& from);
  void MergeFrom(const PMoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PMoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 MoveType = 1;
  void clear_movetype();
  static const int kMoveTypeFieldNumber = 1;
  ::google::protobuf::uint32 movetype() const;
  void set_movetype(::google::protobuf::uint32 value);

  // float MoveValue = 2;
  void clear_movevalue();
  static const int kMoveValueFieldNumber = 2;
  float movevalue() const;
  void set_movevalue(float value);

  // @@protoc_insertion_point(class_scope:PMoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 movetype_;
  float movevalue_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPMoveRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerMove) */ {
 public:
  PPlayerMove();
  virtual ~PPlayerMove();

  PPlayerMove(const PPlayerMove& from);

  inline PPlayerMove& operator=(const PPlayerMove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerMove(PPlayerMove&& from) noexcept
    : PPlayerMove() {
    *this = ::std::move(from);
  }

  inline PPlayerMove& operator=(PPlayerMove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerMove& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerMove* internal_default_instance() {
    return reinterpret_cast<const PPlayerMove*>(
               &_PPlayerMove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PPlayerMove* other);
  friend void swap(PPlayerMove& a, PPlayerMove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerMove* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerMove& from);
  void MergeFrom(const PPlayerMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // uint32 MoveType = 2;
  void clear_movetype();
  static const int kMoveTypeFieldNumber = 2;
  ::google::protobuf::uint32 movetype() const;
  void set_movetype(::google::protobuf::uint32 value);

  // float MoveValue = 3;
  void clear_movevalue();
  static const int kMoveValueFieldNumber = 3;
  float movevalue() const;
  void set_movevalue(float value);

  // @@protoc_insertion_point(class_scope:PPlayerMove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 movetype_;
  float movevalue_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveImpl();
};
// -------------------------------------------------------------------

class PTurnRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PTurnRequest) */ {
 public:
  PTurnRequest();
  virtual ~PTurnRequest();

  PTurnRequest(const PTurnRequest& from);

  inline PTurnRequest& operator=(const PTurnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PTurnRequest(PTurnRequest&& from) noexcept
    : PTurnRequest() {
    *this = ::std::move(from);
  }

  inline PTurnRequest& operator=(PTurnRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PTurnRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PTurnRequest* internal_default_instance() {
    return reinterpret_cast<const PTurnRequest*>(
               &_PTurnRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PTurnRequest* other);
  friend void swap(PTurnRequest& a, PTurnRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PTurnRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PTurnRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PTurnRequest& from);
  void MergeFrom(const PTurnRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PTurnRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 TurnType = 1;
  void clear_turntype();
  static const int kTurnTypeFieldNumber = 1;
  ::google::protobuf::uint32 turntype() const;
  void set_turntype(::google::protobuf::uint32 value);

  // float TurnValue = 2;
  void clear_turnvalue();
  static const int kTurnValueFieldNumber = 2;
  float turnvalue() const;
  void set_turnvalue(float value);

  // @@protoc_insertion_point(class_scope:PTurnRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 turntype_;
  float turnvalue_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPTurnRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerTurn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerTurn) */ {
 public:
  PPlayerTurn();
  virtual ~PPlayerTurn();

  PPlayerTurn(const PPlayerTurn& from);

  inline PPlayerTurn& operator=(const PPlayerTurn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerTurn(PPlayerTurn&& from) noexcept
    : PPlayerTurn() {
    *this = ::std::move(from);
  }

  inline PPlayerTurn& operator=(PPlayerTurn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerTurn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerTurn* internal_default_instance() {
    return reinterpret_cast<const PPlayerTurn*>(
               &_PPlayerTurn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PPlayerTurn* other);
  friend void swap(PPlayerTurn& a, PPlayerTurn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerTurn* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerTurn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerTurn& from);
  void MergeFrom(const PPlayerTurn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerTurn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // uint32 TurnType = 2;
  void clear_turntype();
  static const int kTurnTypeFieldNumber = 2;
  ::google::protobuf::uint32 turntype() const;
  void set_turntype(::google::protobuf::uint32 value);

  // float TurnValue = 3;
  void clear_turnvalue();
  static const int kTurnValueFieldNumber = 3;
  float turnvalue() const;
  void set_turnvalue(float value);

  // @@protoc_insertion_point(class_scope:PPlayerTurn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 turntype_;
  float turnvalue_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnImpl();
};
// -------------------------------------------------------------------

class PGameBegin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PGameBegin) */ {
 public:
  PGameBegin();
  virtual ~PGameBegin();

  PGameBegin(const PGameBegin& from);

  inline PGameBegin& operator=(const PGameBegin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PGameBegin(PGameBegin&& from) noexcept
    : PGameBegin() {
    *this = ::std::move(from);
  }

  inline PGameBegin& operator=(PGameBegin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PGameBegin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PGameBegin* internal_default_instance() {
    return reinterpret_cast<const PGameBegin*>(
               &_PGameBegin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PGameBegin* other);
  friend void swap(PGameBegin& a, PGameBegin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PGameBegin* New() const PROTOBUF_FINAL { return New(NULL); }

  PGameBegin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PGameBegin& from);
  void MergeFrom(const PGameBegin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PGameBegin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 SelfID = 1;
  void clear_selfid();
  static const int kSelfIDFieldNumber = 1;
  ::google::protobuf::uint32 selfid() const;
  void set_selfid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PGameBegin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 selfid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPGameBeginImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PLoginRequest

// string UserName = 1;
inline void PLoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PLoginRequest::username() const {
  // @@protoc_insertion_point(field_get:PLoginRequest.UserName)
  return username_.GetNoArena();
}
inline void PLoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PLoginRequest.UserName)
}
#if LANG_CXX11
inline void PLoginRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PLoginRequest.UserName)
}
#endif
inline void PLoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PLoginRequest.UserName)
}
inline void PLoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PLoginRequest.UserName)
}
inline ::std::string* PLoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:PLoginRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PLoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:PLoginRequest.UserName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PLoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PLoginRequest.UserName)
}

// string Password = 2;
inline void PLoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PLoginRequest::password() const {
  // @@protoc_insertion_point(field_get:PLoginRequest.Password)
  return password_.GetNoArena();
}
inline void PLoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PLoginRequest.Password)
}
#if LANG_CXX11
inline void PLoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PLoginRequest.Password)
}
#endif
inline void PLoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PLoginRequest.Password)
}
inline void PLoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PLoginRequest.Password)
}
inline ::std::string* PLoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:PLoginRequest.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PLoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:PLoginRequest.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PLoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PLoginRequest.Password)
}

// -------------------------------------------------------------------

// PLoginRespond

// uint32 AllowLogin = 1;
inline void PLoginRespond::clear_allowlogin() {
  allowlogin_ = 0u;
}
inline ::google::protobuf::uint32 PLoginRespond::allowlogin() const {
  // @@protoc_insertion_point(field_get:PLoginRespond.AllowLogin)
  return allowlogin_;
}
inline void PLoginRespond::set_allowlogin(::google::protobuf::uint32 value) {
  
  allowlogin_ = value;
  // @@protoc_insertion_point(field_set:PLoginRespond.AllowLogin)
}

// uint32 PlayerNumber = 2;
inline void PLoginRespond::clear_playernumber() {
  playernumber_ = 0u;
}
inline ::google::protobuf::uint32 PLoginRespond::playernumber() const {
  // @@protoc_insertion_point(field_get:PLoginRespond.PlayerNumber)
  return playernumber_;
}
inline void PLoginRespond::set_playernumber(::google::protobuf::uint32 value) {
  
  playernumber_ = value;
  // @@protoc_insertion_point(field_set:PLoginRespond.PlayerNumber)
}

// uint32 SelfID = 3;
inline void PLoginRespond::clear_selfid() {
  selfid_ = 0u;
}
inline ::google::protobuf::uint32 PLoginRespond::selfid() const {
  // @@protoc_insertion_point(field_get:PLoginRespond.SelfID)
  return selfid_;
}
inline void PLoginRespond::set_selfid(::google::protobuf::uint32 value) {
  
  selfid_ = value;
  // @@protoc_insertion_point(field_set:PLoginRespond.SelfID)
}

// -------------------------------------------------------------------

// PActionRequest

// uint32 ActionType = 1;
inline void PActionRequest::clear_actiontype() {
  actiontype_ = 0u;
}
inline ::google::protobuf::uint32 PActionRequest::actiontype() const {
  // @@protoc_insertion_point(field_get:PActionRequest.ActionType)
  return actiontype_;
}
inline void PActionRequest::set_actiontype(::google::protobuf::uint32 value) {
  
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:PActionRequest.ActionType)
}

// -------------------------------------------------------------------

// PPlayerAction

// uint32 PlayerID = 1;
inline void PPlayerAction::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 PPlayerAction::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerAction.PlayerID)
  return playerid_;
}
inline void PPlayerAction::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerAction.PlayerID)
}

// uint32 ActionType = 2;
inline void PPlayerAction::clear_actiontype() {
  actiontype_ = 0u;
}
inline ::google::protobuf::uint32 PPlayerAction::actiontype() const {
  // @@protoc_insertion_point(field_get:PPlayerAction.ActionType)
  return actiontype_;
}
inline void PPlayerAction::set_actiontype(::google::protobuf::uint32 value) {
  
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:PPlayerAction.ActionType)
}

// -------------------------------------------------------------------

// PMoveRequest

// uint32 MoveType = 1;
inline void PMoveRequest::clear_movetype() {
  movetype_ = 0u;
}
inline ::google::protobuf::uint32 PMoveRequest::movetype() const {
  // @@protoc_insertion_point(field_get:PMoveRequest.MoveType)
  return movetype_;
}
inline void PMoveRequest::set_movetype(::google::protobuf::uint32 value) {
  
  movetype_ = value;
  // @@protoc_insertion_point(field_set:PMoveRequest.MoveType)
}

// float MoveValue = 2;
inline void PMoveRequest::clear_movevalue() {
  movevalue_ = 0;
}
inline float PMoveRequest::movevalue() const {
  // @@protoc_insertion_point(field_get:PMoveRequest.MoveValue)
  return movevalue_;
}
inline void PMoveRequest::set_movevalue(float value) {
  
  movevalue_ = value;
  // @@protoc_insertion_point(field_set:PMoveRequest.MoveValue)
}

// -------------------------------------------------------------------

// PPlayerMove

// uint32 PlayerID = 1;
inline void PPlayerMove::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 PPlayerMove::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerMove.PlayerID)
  return playerid_;
}
inline void PPlayerMove::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMove.PlayerID)
}

// uint32 MoveType = 2;
inline void PPlayerMove::clear_movetype() {
  movetype_ = 0u;
}
inline ::google::protobuf::uint32 PPlayerMove::movetype() const {
  // @@protoc_insertion_point(field_get:PPlayerMove.MoveType)
  return movetype_;
}
inline void PPlayerMove::set_movetype(::google::protobuf::uint32 value) {
  
  movetype_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMove.MoveType)
}

// float MoveValue = 3;
inline void PPlayerMove::clear_movevalue() {
  movevalue_ = 0;
}
inline float PPlayerMove::movevalue() const {
  // @@protoc_insertion_point(field_get:PPlayerMove.MoveValue)
  return movevalue_;
}
inline void PPlayerMove::set_movevalue(float value) {
  
  movevalue_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMove.MoveValue)
}

// -------------------------------------------------------------------

// PTurnRequest

// uint32 TurnType = 1;
inline void PTurnRequest::clear_turntype() {
  turntype_ = 0u;
}
inline ::google::protobuf::uint32 PTurnRequest::turntype() const {
  // @@protoc_insertion_point(field_get:PTurnRequest.TurnType)
  return turntype_;
}
inline void PTurnRequest::set_turntype(::google::protobuf::uint32 value) {
  
  turntype_ = value;
  // @@protoc_insertion_point(field_set:PTurnRequest.TurnType)
}

// float TurnValue = 2;
inline void PTurnRequest::clear_turnvalue() {
  turnvalue_ = 0;
}
inline float PTurnRequest::turnvalue() const {
  // @@protoc_insertion_point(field_get:PTurnRequest.TurnValue)
  return turnvalue_;
}
inline void PTurnRequest::set_turnvalue(float value) {
  
  turnvalue_ = value;
  // @@protoc_insertion_point(field_set:PTurnRequest.TurnValue)
}

// -------------------------------------------------------------------

// PPlayerTurn

// uint32 PlayerID = 1;
inline void PPlayerTurn::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 PPlayerTurn::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerTurn.PlayerID)
  return playerid_;
}
inline void PPlayerTurn::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurn.PlayerID)
}

// uint32 TurnType = 2;
inline void PPlayerTurn::clear_turntype() {
  turntype_ = 0u;
}
inline ::google::protobuf::uint32 PPlayerTurn::turntype() const {
  // @@protoc_insertion_point(field_get:PPlayerTurn.TurnType)
  return turntype_;
}
inline void PPlayerTurn::set_turntype(::google::protobuf::uint32 value) {
  
  turntype_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurn.TurnType)
}

// float TurnValue = 3;
inline void PPlayerTurn::clear_turnvalue() {
  turnvalue_ = 0;
}
inline float PPlayerTurn::turnvalue() const {
  // @@protoc_insertion_point(field_get:PPlayerTurn.TurnValue)
  return turnvalue_;
}
inline void PPlayerTurn::set_turnvalue(float value) {
  
  turnvalue_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurn.TurnValue)
}

// -------------------------------------------------------------------

// PGameBegin

// uint32 SelfID = 1;
inline void PGameBegin::clear_selfid() {
  selfid_ = 0u;
}
inline ::google::protobuf::uint32 PGameBegin::selfid() const {
  // @@protoc_insertion_point(field_get:PGameBegin.SelfID)
  return selfid_;
}
inline void PGameBegin::set_selfid(::google::protobuf::uint32 value) {
  
  selfid_ = value;
  // @@protoc_insertion_point(field_set:PGameBegin.SelfID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMessage_2eproto__INCLUDED
